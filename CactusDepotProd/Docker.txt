Run MySql image:
	docker run -dt -v datafilesadmin:/var/lib/mysql -e "ASPNETCORE_ENVIRONMENT=Development" -e "MYSQL_ROOT_PASSWORD=C@tal0g2022A" -e "MYSQL_USER=catalogadmin" -e "MYSQL_PASSWORD=C@tal0g2022A" -e "MYSQL_DATABASE=admindb"    -p 4000:3306 -P --name admindbsrv mysql
	docker run -dt -v datafilesseeds:/var/lib/mysql -e "ASPNETCORE_ENVIRONMENT=Development" -e "MYSQL_ROOT_PASSWORD=C@tal0g2022A" -e "MYSQL_USER=catalogadmin" -e "MYSQL_PASSWORD=C@tal0g2022A" -e "MYSQL_DATABASE=seedsdepot" -p 5000:3306 -P --name seedsdbsrv mysql

where "mysql" is the image name

After importing MySql data, reset HashedPassword getting new value for imported users. Old hash will not work.


To create new volume, run docker volume create seedsdepotseeds
To see the volumes, run  docker volume ls
Then you can use these custom volumes in the docker rum command as
 ... -v datafilesseeds:/var/lib/mysql ...

 use "host.docker.internal instead of the "localhost for myql conn!!!

 Add entrypoint: "-d" into the Docker file or yaml for container not closing immidiately.